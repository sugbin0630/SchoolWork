1) The statement will compile and execute correctly.
2) The statement will not compile but it can be repaired by a cast.
3) The statement will not compile and cannot be repaired by a cast.
4) The statement will compile but fails to execute correctly.

Vehicle v1 = new Vehicle(4);
int nw = v1.getNumWheels(); (1


Car c1 = new Car(6);
System.out.println(c1.getNumWheels());  (1


Vehicle v2 = new Car(4);
int capacity = v2.getNumSeats();    (2


Truck t1 = new Truck(18, 14000);
int loadLimit = ((Vehicle)t1).getNumSeats();    (3


Car c2 = new Car(5);
int maxLoad = (((Truck)c2).getLoadCapacity());  (


Vehicle v3 = new Vehicle(4);
System.out.println(((Car)v3).getNumSeats());    (


Vehicle v4 = new Truck(4, 1200);
System.out.println(((Truck)v4).getNumWheels()); (


Truck t2 = new Truck(10, 8000); (
Car c3 = (Car)t2;
	



	Vehicle v1 = new Vehicle(4);
Vehicle v2 = new Vehicle(4);
Vehicle v3 = new Vehicle(6);
Vehicle v4 = new Truck(10, 500);
	Truck t1 = new Truck (10, 1000);
	Truck t2 = new Truck (10, 700);
Vehicle v5 = new Car(8);
	Car c1 = new Car(8);
	Car c2 = new Car(6);


v1.isBig();     false
v4.isBig();     
t1.isBig();     
v5.isBig();     
c1.isBig();     true
v1.equals(v2);  
v1.equals(v3);  
v1.equals(t1);  
v1.equals(c1);  
v3.equals(c1);  false
v4.equals(v2);  
v4.equals(t1);  
t1.equals(v3);  
t1.equals(v4);  
t1.equals(t2);  
t1.equals(c1);  
c1.equals(v1);  
c1.equals(t1);  
